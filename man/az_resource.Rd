% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/az_resource.R
\docType{class}
\name{az_resource}
\alias{az_resource}
\title{Azure resource class}
\format{An R6 object of class \code{az_resource}.}
\usage{
az_resource
}
\description{
Class representing a generic Azure resource.
}
\section{Methods}{

\itemize{
\item \code{new(...)}: Initialize a new resource object. See 'Initialization' for more details.
\item \code{check()}: Check if this resource still exists.
\item \code{delete(confirm=TRUE, wait=FALSE)}: Delete this resource, after a confirmation check. Optionally wait for the delete to finish.
\item \code{update(...)}: Update this resource on the host.
\item \code{sync_fields()}: Update the fields in this object with information from the host.
\item \code{set_api_version(api_version)}: Set the API version to use when interacting with the host. By default, use the latest API version available.
\item \code{do_operation(...)} Carry out an operation. See \code{Operations} for more details.
}
}

\section{Initialization}{

There are multiple ways to initialize a new resource object. You can either retrieve an existing resource, or deploy a new resource on the host. Generally, the easiest way to create a new object is via the \code{get_resource}, \code{create_resource} or \code{list_resources} methods of the \link{az_resource_group} class, which will handle the details automatically.

To initialize a resource object from scratch, supply the following arguments to \code{new()}:
\itemize{
\item \code{token}: An Oauth 2.0 token, as generated by \link{get_azure_token}.
\item \code{subscription}: The subscription ID.
\item \code{resource_group}: The resource group.
}

There are also a number of \emph{identifying arguments} to \code{new()} that are used to refer to a specific resource:
\itemize{
\item \code{id}: The full ID of the resource, including subscription ID and resource group.
\item \code{provider}: The provider of the resource, eg \code{Microsoft.Compute}.
\item \code{path}: The full path to the resource, eg \code{virtualMachines}.
\item \code{type}: The combination of provider and path, eg \code{Microsoft.Compute/virtualMachines}.
\item \code{name}: The name of the resource instance, eg \code{myWindowsVM}.
}

Providing the \code{id} argument will fill in the values for all the other arguments. Similarly, providing the \code{type} argument will fill in the values for \code{provider} and \code{path}. Unless you provide \code{id}, you must also provide \code{name}. If you provide only these identifying arguments to \code{new()}, it is assumed that you want to retrieve an existing resource. Passing any further (named) arguments will create a new resource, with the supplied arguments as parameters.
}

\section{Operations}{

The \code{do_operation()} method allows you to carry out arbitrary operations on the resource. It takes the following arguments:
\itemize{
\item \code{http_verb}: The HTTP verb as a string, one of \code{GET}, \code{PUT}, \code{POST}, \code{DELETE}, \code{HEAD} or \code{PATCH}.
\item \code{op}: The operation in question, which will be appended to the URL path of the request.
\item \code{options}: A named list giving the URL query parameters.
\item \code{...}: Other named arguments passed to \link{call_azure_rm}, and then to the appropriate call in httr. In particular, use \code{body} to supply the body of a request.
}

Consult the Azure documentation for your resource to find out what operations are supported.
}

\seealso{
\link{az_resource_group}, \link{call_azure_rm}, \link{call_azure_url},
\link{https://docs.microsoft.com/en-us/rest/api/resources/resources}
}
\keyword{datasets}
